depfinder is a tool that finds the dependencies of Slackware packages.

depfinder is much faster than requiredbuilder, a very nice script
by Stefano Stabellini that I used in the past to find package
dependencies. But requiredbuilder is written entirely in bash and I
had always thought that optimizing the search routines in C or C++
would make the whole process a lot faster. So, the speed difference
mainly comes from the C++ code that is used in depfinder to find in
which package each individual library is included. That C++ code is
'borrowed' (as in blatanly ripped) from Nigel Bosch's zpm code.

depfinder also has support for running multiple jobs in parallel that
makes it a lot faster when used with multiple CPUs/cores.

The ADD and EXCLUDE environment variables can be set to add or exclude
packages from the dependency list respectively. Either one can be set
to a comma or space separated list of package names that can be either
added or excluded from the dependency list depfinder creates
respectively. If a package name appears in both ADD and EXCLUDE, then
ADD takes priority and the package will be added to the dependency
list. Note that you will have to make sure yourself that the package
names you put in ADD or EXCLUDE are correct.

The dependency list is by default being output in a comma separated
list, without version information, but there are options to output
dependencies with version information and to a file: a .dep file
with a comma separated list without version information, or a
slack-required file with version information, respectively.

Note that I don't really agree with version information in
dependency lists. "libxyz >= 1.0-i486-2gv" actually doesn't always
mean that the package will work with any version of libxyz greater
than 1.0. There will be cases that it will have to be rebuilt with
a new libxyz version. Also the check will fail if someone has
"libxyz >= 1.0-i486-1xy" installed since "1xy"<"2gv". But the two
libxyz packages might really be identical otherwise. Using
"libxyz = 1.0-i486-2gv" is not a solution, since the check will
always fail with any subsequent libxyz packages, prompting for
a package rebuild, which would be completely unnecessary.

I also don't personally agree with slack-required files being
inside packages, which I think is a very poor and inefficient design.
A simple change in the dependency list, which would otherwise require
the editing of a text file only, requires rebuilding the package.
But that's really a whole different matter and I'll stop my ranting
now, since everyone can do whatever he wants with the dependency list
he gets with depfinder.

depfinder will only find dependencies of binary files, scripts are not
supported in any way.

Apart from basic shell commands, like ls, sed, touch etc, depfinder
requires python and util-linux-ng to be installed. You also need to
have the gcc-g++ compiler, so that depfinder-search can be compiled.

A huge thanks goes to Nigel Bosch for creating the original code for his
great package manager and making it available in the first place.
